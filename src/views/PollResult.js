// Generated by CoffeeScript 1.6.3
define(function(require) {
  var PollResults;
  PollResults = require('resources/PollResults');
  return require('cell/defineView!')({
    beforeRender: function() {
      this.pollResults = PollResults.query({
        q: JSON.stringify({
          pollId: this.options.pollId
        })
      });
      return this.watch((function() {
        return this.pollResults.status();
      }), function(status) {
        var count, result, resultMap;
        if (status === 'ok') {
          resultMap = {};
          this.pollResults.map(function(result) {
            var choice;
            choice = result.get('choice').text;
            if (resultMap[choice] == null) {
              resultMap[choice] = {
                count: 0
              };
            }
            return ++resultMap[choice].count;
          });
          for (result in resultMap) {
            count = resultMap[result].count;
            resultMap[result].pct = 100 * (count / this.pollResults.length());
          }
          return this.set('resultMap', resultMap);
        }
      });
    },
    render: function(_) {
      return [
        _('h2', 'Results'), _('.content', _('.results', function() {
          var choice, count, pct, resultMap, _ref, _results;
          if (resultMap = this.get('resultMap')) {
            _results = [];
            for (choice in resultMap) {
              _ref = resultMap[choice], count = _ref.count, pct = _ref.pct;
              _results.push(_('.result', choice, _('.count', count), _('.bar', {
                style: "width:" + pct + "%"
              })));
            }
            return _results;
          }
        }), _('a.done', {
          href: '#/'
        }, 'Go back to polls...'))
      ];
    }
  });
});

/*
//@ sourceMappingURL=PollResult.map
*/
